
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Jan  8 09:11:30 2025 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/chsu/rvp-workspace/riscv-arch-test/coverage/dataset.cgf \
//                  --cgf /home/chsu/rvp-workspace/rvp-test-suite/rv64ip_cgf/p16.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the paas.wx instruction of the RISC-V RV64PZicsr extension for the paas.wx covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IPZicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*P.*Zicsr.*);def TEST_CASE_1=True;",paas.wx)

RVTEST_SIGBASE(x8,signature_x8_1)

inst_0:
// rs1 == rs2 != rd, rs1==x24, rs2==x24, rd==x1, rs1_w0_val == -2147483648, rs2_w1_val == -8388609, rs1_w1_val == -5, rs1_w0_val < 0 and rs2_w0_val < 0, rs1_w0_val != rs2_w0_val, rs1_w1_val < 0 and rs2_w1_val < 0, rs1_w1_val != rs2_w1_val, rs2_w0_val == -131073
// opcode: paas.wx ; op1:x24; op2:x24; dest:x1; op1val:0xfffffffb80000000;  op2val:0xff7ffffffffdffff
TEST_RR_OP(paas.wx, x1, x24, x24, 0x0000000000000000, 0xfffffffb80000000, 0xff7ffffffffdffff, x8, 0*XLEN/8, x12)

inst_1:
// rs1 == rd != rs2, rs1==x29, rs2==x22, rd==x29, rs1_w0_val == -1, rs1_w1_val == -67108865, rs2_w1_val == -9, rs2_w0_val == -5
// opcode: paas.wx ; op1:x29; op2:x22; dest:x29; op1val:0xfbffffffffffffff;  op2val:0xfffffff7fffffffb
TEST_RR_OP(paas.wx, x29, x29, x22, 0x0000000000000000, 0xfbffffffffffffff, 0xfffffff7fffffffb, x8, 1*XLEN/8, x12)

inst_2:
// rs2 == rd != rs1, rs1==x19, rs2==x4, rd==x4, rs1_w0_val == 0, rs2_w1_val == 2, rs2_w0_val == -134217729, rs1_w1_val == 4194304, rs1_w1_val > 0 and rs2_w1_val > 0
// opcode: paas.wx ; op1:x19; op2:x4; dest:x4; op1val:0x40000000000000;  op2val:0x000002f7ffffff
TEST_RR_OP(paas.wx, x4, x19, x4, 0x0000000000000000, 0x40000000000000, 0x000002f7ffffff, x8, 2*XLEN/8, x12)

inst_3:
// rs1 == rs2 == rd, rs1==x14, rs2==x14, rd==x14, rs1_w0_val == 1, rs1_w0_val > 0 and rs2_w0_val > 0, rs2_w0_val == 16777216
// opcode: paas.wx ; op1:x14; op2:x14; dest:x14; op1val:0x40000000000001;  op2val:0x00000501000000
TEST_RR_OP(paas.wx, x14, x14, x14, 0x0000000000000000, 0x40000000000001, 0x00000501000000, x8, 3*XLEN/8, x12)

inst_4:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x9, rs2==x20, rd==x25, rs1_w0_val == 2147483647, rs1_w1_val == -131073, rs1_w1_val < 0 and rs2_w1_val > 0, rs2_w0_val == 8
// opcode: paas.wx ; op1:x9; op2:x20; dest:x25; op1val:0xfffdffff7fffffff;  op2val:0x00000200000008
TEST_RR_OP(paas.wx, x25, x9, x20, 0x0000000000000000, 0xfffdffff7fffffff, 0x00000200000008, x8, 4*XLEN/8, x12)

inst_5:
// rs1==x18, rs2==x2, rd==x28, rs1_w0_val == 2, rs2_w0_val == 33554432, rs2_w1_val == 0
// opcode: paas.wx ; op1:x18; op2:x2; dest:x28; op1val:0xfffffff600000002;  op2val:0x00000002000000
TEST_RR_OP(paas.wx, x28, x18, x2, 0x0000000000000000, 0xfffffff600000002, 0x00000002000000, x8, 5*XLEN/8, x12)

inst_6:
// rs1==x1, rs2==x16, rd==x5, rs1_w0_val == 4, rs1_w1_val == 1024, rs2_w1_val == -32769, rs1_w1_val > 0 and rs2_w1_val < 0
// opcode: paas.wx ; op1:x1; op2:x16; dest:x5; op1val:0x00040000000004;  op2val:0xffff7fff3fffffff
TEST_RR_OP(paas.wx, x5, x1, x16, 0x0000000000000000, 0x00040000000004, 0xffff7fff3fffffff, x8, 6*XLEN/8, x12)

inst_7:
// rs1==x13, rs2==x31, rd==x16, rs1_w0_val == 8, rs1_w1_val == -524289, rs2_w0_val == 4, rs2_w1_val == -257
// opcode: paas.wx ; op1:x13; op2:x31; dest:x16; op1val:0xfff7ffff00000008;  op2val:0xfffffeff00000004
TEST_RR_OP(paas.wx, x16, x13, x31, 0x0000000000000000, 0xfff7ffff00000008, 0xfffffeff00000004, x8, 7*XLEN/8, x12)

inst_8:
// rs1==x7, rs2==x30, rd==x23, rs1_w0_val == 16, rs2_w1_val == 65536, rs2_w0_val == 512
// opcode: paas.wx ; op1:x7; op2:x30; dest:x23; op1val:0x00040000000010;  op2val:0x01000000000200
TEST_RR_OP(paas.wx, x23, x7, x30, 0x0000000000000000, 0x00040000000010, 0x01000000000200, x8, 8*XLEN/8, x12)

inst_9:
// rs1==x30, rs2==x21, rd==x24, rs1_w0_val == 32, rs2_w1_val == -65537, rs2_w0_val == 134217728
// opcode: paas.wx ; op1:x30; op2:x21; dest:x24; op1val:0xfbffffff00000020;  op2val:0xfffeffff08000000
TEST_RR_OP(paas.wx, x24, x30, x21, 0x0000000000000000, 0xfbffffff00000020, 0xfffeffff08000000, x8, 9*XLEN/8, x12)

inst_10:
// rs1==x2, rs2==x11, rd==x20, rs1_w0_val == 64, rs2_w1_val == 2048
// opcode: paas.wx ; op1:x2; op2:x11; dest:x20; op1val:0xfffdffff00000040;  op2val:0x00080000000005
TEST_RR_OP(paas.wx, x20, x2, x11, 0x0000000000000000, 0xfffdffff00000040, 0x00080000000005, x8, 10*XLEN/8, x12)

inst_11:
// rs1==x3, rs2==x6, rd==x10, rs1_w0_val == 128, rs2_w1_val == -65, rs1_w1_val == 1
// opcode: paas.wx ; op1:x3; op2:x6; dest:x10; op1val:0x00000100000080;  op2val:0xffffffbf00000006
TEST_RR_OP(paas.wx, x10, x3, x6, 0x0000000000000000, 0x00000100000080, 0xffffffbf00000006, x8, 11*XLEN/8, x12)

inst_12:
// rs1==x16, rs2==x29, rd==x17, rs1_w0_val == 256, rs1_w1_val == -513, rs1_w0_val > 0 and rs2_w0_val < 0, rs2_w0_val == -2049, rs2_w1_val == -16777217
// opcode: paas.wx ; op1:x16; op2:x29; dest:x17; op1val:0xfffffdff00000100;  op2val:0xfefffffffffff7ff
TEST_RR_OP(paas.wx, x17, x16, x29, 0x0000000000000000, 0xfffffdff00000100, 0xfefffffffffff7ff, x8, 12*XLEN/8, x2)
RVTEST_SIGBASE(x4,signature_x4_0)

inst_13:
// rs1==x21, rs2==x8, rd==x31, rs1_w0_val == 512, rs1_w1_val == 2147483647
// opcode: paas.wx ; op1:x21; op2:x8; dest:x31; op1val:0x7fffffff00000200;  op2val:0x01000000000006
TEST_RR_OP(paas.wx, x31, x21, x8, 0x0000000000000000, 0x7fffffff00000200, 0x01000000000006, x4, 0*XLEN/8, x2)

inst_14:
// rs1==x17, rs2==x19, rd==x13, rs1_w0_val == 1024, rs2_w0_val == -1, rs1_w1_val == -4097, rs2_w1_val == -8193
// opcode: paas.wx ; op1:x17; op2:x19; dest:x13; op1val:0xffffefff00000400;  op2val:0xffffdfffffffffff
TEST_RR_OP(paas.wx, x13, x17, x19, 0x0000000000000000, 0xffffefff00000400, 0xffffdfffffffffff, x4, 1*XLEN/8, x2)

inst_15:
// rs1==x10, rs2==x26, rd==x11, rs1_w0_val == 2048, rs2_w0_val == -1073741825, rs2_w1_val == 262144
// opcode: paas.wx ; op1:x10; op2:x26; dest:x11; op1val:0xfffffff600000800;  op2val:0x040000bfffffff
TEST_RR_OP(paas.wx, x11, x10, x26, 0x0000000000000000, 0xfffffff600000800, 0x040000bfffffff, x4, 2*XLEN/8, x2)

inst_16:
// rs1==x20, rs2==x1, rd==x7, rs1_w0_val == 4096, 
// opcode: paas.wx ; op1:x20; op2:x1; dest:x7; op1val:0x00000300001000;  op2val:0xc000000002000000
TEST_RR_OP(paas.wx, x7, x20, x1, 0x0000000000000000, 0x00000300001000, 0xc000000002000000, x4, 3*XLEN/8, x2)

inst_17:
// rs1==x8, rs2==x27, rd==x6, rs1_w0_val == 8192, rs2_w0_val == -33554433, rs1_w1_val == -2147483648, rs2_w1_val == 1073741824
// opcode: paas.wx ; op1:x8; op2:x27; dest:x6; op1val:0x8000000000002000;  op2val:0x40000000fdffffff
TEST_RR_OP(paas.wx, x6, x8, x27, 0x0000000000000000, 0x8000000000002000, 0x40000000fdffffff, x4, 4*XLEN/8, x2)

inst_18:
// rs1==x28, rs2==x25, rd==x15, rs1_w0_val == 16384, rs1_w1_val == 524288
// opcode: paas.wx ; op1:x28; op2:x25; dest:x15; op1val:0x08000000004000;  op2val:0x00000000000006
TEST_RR_OP(paas.wx, x15, x28, x25, 0x0000000000000000, 0x08000000004000, 0x00000000000006, x4, 5*XLEN/8, x2)

inst_19:
// rs1==x26, rs2==x23, rd==x27, rs1_w0_val == 32768, rs2_w0_val == 8388608
// opcode: paas.wx ; op1:x26; op2:x23; dest:x27; op1val:0x00000100008000;  op2val:0xfffffeff00800000
TEST_RR_OP(paas.wx, x27, x26, x23, 0x0000000000000000, 0x00000100008000, 0xfffffeff00800000, x4, 6*XLEN/8, x2)

inst_20:
// rs1==x27, rs2==x15, rd==x8, rs1_w0_val == 65536, rs1_w1_val == -3, rs2_w1_val == 536870912, rs2_w0_val == 67108864
// opcode: paas.wx ; op1:x27; op2:x15; dest:x8; op1val:0xfffffffd00010000;  op2val:0x2000000004000000
TEST_RR_OP(paas.wx, x8, x27, x15, 0x0000000000000000, 0xfffffffd00010000, 0x2000000004000000, x4, 7*XLEN/8, x2)

inst_21:
// rs1==x12, rs2==x5, rd==x9, rs1_w0_val == 131072, rs2_w1_val == 2147483647, rs2_w0_val == 2097152
// opcode: paas.wx ; op1:x12; op2:x5; dest:x9; op1val:0xfffffffb00020000;  op2val:0x7fffffff00200000
TEST_RR_OP(paas.wx, x9, x12, x5, 0x0000000000000000, 0xfffffffb00020000, 0x7fffffff00200000, x4, 8*XLEN/8, x2)

inst_22:
// rs1==x5, rs2==x13, rd==x30, rs1_w0_val == 262144, rs2_w0_val == -4194305, rs1_w1_val == -65537
// opcode: paas.wx ; op1:x5; op2:x13; dest:x30; op1val:0xfffeffff00040000;  op2val:0x3fffffffffbfffff
TEST_RR_OP(paas.wx, x30, x5, x13, 0x0000000000000000, 0xfffeffff00040000, 0x3fffffffffbfffff, x4, 9*XLEN/8, x2)

inst_23:
// rs1==x23, rs2==x9, rd==x12, rs1_w0_val == 524288, rs2_w1_val == -4097, rs1_w1_val == 16, rs1_w0_val == rs2_w0_val, rs2_w0_val == 524288
// opcode: paas.wx ; op1:x23; op2:x9; dest:x12; op1val:0x00001000080000;  op2val:0xffffefff00080000
TEST_RR_OP(paas.wx, x12, x23, x9, 0x0000000000000000, 0x00001000080000, 0xffffefff00080000, x4, 10*XLEN/8, x2)

inst_24:
// rs1==x31, rs2==x18, rd==x22, rs1_w0_val == 1048576, rs2_w0_val == -67108865, rs1_w1_val == 1431655765, rs2_w1_val == 8388608
// opcode: paas.wx ; op1:x31; op2:x18; dest:x22; op1val:0x5555555500100000;  op2val:0x800000fbffffff
TEST_RR_OP(paas.wx, x22, x31, x18, 0x0000000000000000, 0x5555555500100000, 0x800000fbffffff, x4, 11*XLEN/8, x2)

inst_25:
// rs1==x0, rs2==x7, rd==x21, rs1_w0_val == 2097152, rs2_w1_val == 134217728, rs1_w1_val == 2097152
// opcode: paas.wx ; op1:x0; op2:x7; dest:x21; op1val:0x20000000200000;  op2val:0x8000000fffdffff
TEST_RR_OP(paas.wx, x21, x0, x7, 0x0000000000000000, 0x20000000200000, 0x8000000fffdffff, x4, 12*XLEN/8, x5)

inst_26:
// rs1==x6, rs2==x12, rd==x18, rs1_w0_val == 4194304, 
// opcode: paas.wx ; op1:x6; op2:x12; dest:x18; op1val:0xfffffff900400000;  op2val:0x00000200000008
TEST_RR_OP(paas.wx, x18, x6, x12, 0x0000000000000000, 0xfffffff900400000, 0x00000200000008, x4, 13*XLEN/8, x5)

inst_27:
// rs1==x11, rs2==x3, rd==x26, rs1_w0_val == 8388608, rs1_w1_val == -33, rs2_w1_val == 16384
// opcode: paas.wx ; op1:x11; op2:x3; dest:x26; op1val:0xffffffdf00800000;  op2val:0x004000fffdffff
TEST_RR_OP(paas.wx, x26, x11, x3, 0x0000000000000000, 0xffffffdf00800000, 0x004000fffdffff, x4, 14*XLEN/8, x5)

inst_28:
// rs1==x25, rs2==x10, rd==x0, rs1_w0_val == 16777216, rs1_w1_val == -1025, rs2_w1_val == -134217729, rs2_w0_val == -65537
// opcode: paas.wx ; op1:x25; op2:x10; dest:x0; op1val:0xfffffbff01000000;  op2val:0xf7fffffffffeffff
TEST_RR_OP(paas.wx, x0, x25, x10, 0x0000000000000000, 0xfffffbff01000000, 0xf7fffffffffeffff, x4, 15*XLEN/8, x5)

inst_29:
// rs1==x22, rs2==x28, rd==x2, rs1_w0_val == 33554432, rs2_w0_val == 128
// opcode: paas.wx ; op1:x22; op2:x28; dest:x2; op1val:0x00001002000000;  op2val:0xffffdfff00000080
TEST_RR_OP(paas.wx, x2, x22, x28, 0x0000000000000000, 0x00001002000000, 0xffffdfff00000080, x4, 16*XLEN/8, x5)
RVTEST_SIGBASE(x1,signature_x1_0)

inst_30:
// rs1==x15, rs2==x17, rd==x3, rs1_w0_val == 67108864, rs2_w0_val == 2147483647, rs2_w1_val == 8192, rs1_w1_val == -16777217
// opcode: paas.wx ; op1:x15; op2:x17; dest:x3; op1val:0xfeffffff04000000;  op2val:0x0020007fffffff
TEST_RR_OP(paas.wx, x3, x15, x17, 0x0000000000000000, 0xfeffffff04000000, 0x0020007fffffff, x1, 0*XLEN/8, x5)

inst_31:
// rs1==x4, rs2==x0, rd==x19, rs1_w0_val == 134217728, rs2_w1_val == -1431655766
// opcode: paas.wx ; op1:x4; op2:x0; dest:x19; op1val:0xfffffdff08000000;  op2val:0xaaaaaaaabfffffff
TEST_RR_OP(paas.wx, x19, x4, x0, 0x0000000000000000, 0xfffffdff08000000, 0xaaaaaaaabfffffff, x1, 1*XLEN/8, x5)

inst_32:
// rs1_w0_val == 268435456, rs2_w1_val == -33
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xc000000010000000;  op2val:0xffffffdf00080000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xc000000010000000, 0xffffffdf00080000, x1, 2*XLEN/8, x5)

inst_33:
// rs1_w0_val == 536870912, rs2_w0_val == 1073741824, rs1_w1_val == -32769
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffff7fff20000000;  op2val:0x00000240000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffff7fff20000000, 0x00000240000000, x1, 3*XLEN/8, x5)

inst_34:
// rs1_w0_val == 1073741824, rs2_w1_val == -268435457, rs2_w0_val == 65536
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffff640000000;  op2val:0xefffffff00010000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffff640000000, 0xefffffff00010000, x1, 4*XLEN/8, x5)

inst_35:
// rs1_w0_val == -2, rs1_w1_val == 512, rs2_w1_val == -2147483648
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000200fffffffe;  op2val:0x80000000fbffffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000200fffffffe, 0x80000000fbffffff, x1, 5*XLEN/8, x5)

inst_36:
// rs1_w0_val == -3, rs1_w1_val == 65536, rs2_w1_val == 67108864
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x010000fffffffd;  op2val:0x4000000fffff7ff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x010000fffffffd, 0x4000000fffff7ff, x1, 6*XLEN/8, x5)

inst_37:
// rs1_w0_val == -5, rs2_w0_val == 1048576, rs1_w0_val < 0 and rs2_w0_val > 0, rs1_w1_val == 536870912, rs2_w1_val == 32768
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x20000000fffffffb;  op2val:0x00800000100000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x20000000fffffffb, 0x00800000100000, x1, 7*XLEN/8, x5)

inst_38:
// rs1_w0_val == -9, rs2_w0_val == -1048577
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffeffffffffff7;  op2val:0xffffdfffffefffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffeffffffffff7, 0xffffdfffffefffff, x1, 8*XLEN/8, x5)

inst_39:
// rs1_w0_val == -17, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000001ffffffef;  op2val:0xfffeffff00100000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000001ffffffef, 0xfffeffff00100000, x1, 9*XLEN/8, x5)

inst_40:
// rs1_w0_val == -33, rs2_w0_val == -17
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x80000000ffffffdf;  op2val:0xffffdfffffffffef
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x80000000ffffffdf, 0xffffdfffffffffef, x1, 10*XLEN/8, x5)

inst_41:
// rs1_w0_val == -65, rs2_w1_val == -67108865, rs1_w1_val == 1048576
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x100000ffffffbf;  op2val:0xfbffffff00800000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x100000ffffffbf, 0xfbffffff00800000, x1, 11*XLEN/8, x5)

inst_42:
// rs1_w0_val == -129, rs2_w0_val == -8193
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffdffffffffff7f;  op2val:0x4000000ffffdfff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffdffffffffff7f, 0x4000000ffffdfff, x1, 12*XLEN/8, x5)

inst_43:
// rs1_w0_val == -257, rs2_w0_val == -513
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffffcfffffeff;  op2val:0xffffdffffffffdff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffffcfffffeff, 0xffffdffffffffdff, x1, 13*XLEN/8, x5)

inst_44:
// rs1_w0_val == -513, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x7ffffffffffffdff;  op2val:0x004000ffefffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x7ffffffffffffdff, 0x004000ffefffff, x1, 14*XLEN/8, x5)

inst_45:
// rs1_w0_val == -1025, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x080000fffffbff;  op2val:0xfffffffafffeffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x080000fffffbff, 0xfffffffafffeffff, x1, 15*XLEN/8, x5)

inst_46:
// rs1_w0_val == -2049, rs1_w1_val == -33554433, rs2_w0_val == 8192, rs2_w1_val == -16385
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfdfffffffffff7ff;  op2val:0xffffbfff00002000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfdfffffffffff7ff, 0xffffbfff00002000, x1, 16*XLEN/8, x5)

inst_47:
// rs1_w0_val == -4097, rs2_w0_val == -524289, rs1_w1_val == 1073741824
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x40000000ffffefff;  op2val:0x008000fff7ffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x40000000ffffefff, 0x008000fff7ffff, x1, 17*XLEN/8, x5)

inst_48:
// rs1_w0_val == -8193, rs2_w1_val == -4194305
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffffaffffdfff;  op2val:0xffbffffffffdffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffffaffffdfff, 0xffbffffffffdffff, x1, 18*XLEN/8, x5)

inst_49:
// rs1_w0_val == -16385, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x3fffffffffffbfff;  op2val:0x0080007fffffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x3fffffffffffbfff, 0x0080007fffffff, x1, 19*XLEN/8, x5)

inst_50:
// rs1_w0_val == -32769, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffff6ffff7fff;  op2val:0xfffffffafffffff8
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffff6ffff7fff, 0xfffffffafffffff8, x1, 20*XLEN/8, x5)

inst_51:
// rs1_w0_val == -65537, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x200000fffeffff;  op2val:0xefffffff00000008
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x200000fffeffff, 0xefffffff00000008, x1, 21*XLEN/8, x5)

inst_52:
// rs1_w0_val == -131073, rs2_w1_val == 16777216, rs2_w0_val == 2
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffffbfffdffff;  op2val:0x100000000000002
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffffbfffdffff, 0x100000000000002, x1, 22*XLEN/8, x5)

inst_53:
// rs1_w0_val == -262145, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfdfffffffffbffff;  op2val:0xfffffeff00002000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfdfffffffffbffff, 0xfffffeff00002000, x1, 23*XLEN/8, x5)

inst_54:
// rs1_w0_val == -524289, rs2_w1_val == -262145, rs2_w0_val == 4194304, rs1_w1_val == 16384
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x004000fff7ffff;  op2val:0xfffbffff00400000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x004000fff7ffff, 0xfffbffff00400000, x1, 24*XLEN/8, x5)

inst_55:
// rs2_w1_val == -131073, rs1_w0_val == -1073741825
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffefffbfffffff;  op2val:0xfffdffff00000002
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffefffbfffffff, 0xfffdffff00000002, x1, 25*XLEN/8, x5)

inst_56:
// rs2_w1_val == -524289, rs1_w1_val == 134217728
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x800000000000004;  op2val:0xfff7ffff00200000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x800000000000004, 0xfff7ffff00200000, x1, 26*XLEN/8, x5)

inst_57:
// rs2_w1_val == -1048577, rs1_w1_val == 2048
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x00080001000000;  op2val:0xffefffff00000008
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x00080001000000, 0xffefffff00000008, x1, 27*XLEN/8, x5)

inst_58:
// rs2_w1_val == -2097153, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x00000900000800;  op2val:0xffdfffff00800000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x00000900000800, 0xffdfffff00800000, x1, 28*XLEN/8, x5)

inst_59:
// rs2_w1_val == -33554433, rs1_w1_val == 16777216, rs1_w0_val == 1431655765, rs2_w0_val == 32768
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x100000055555555;  op2val:0xfdffffff00008000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x100000055555555, 0xfdffffff00008000, x1, 29*XLEN/8, x5)

inst_60:
// rs2_w1_val == -536870913, rs1_w1_val == 67108864
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x400000000008000;  op2val:0xdffffffffffeffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x400000000008000, 0xdffffffffffeffff, x1, 30*XLEN/8, x5)

inst_61:
// rs2_w1_val == -1073741825, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x3fffffff00000000;  op2val:0xbffffffffffffff9
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x3fffffff00000000, 0xbffffffffffffff9, x1, 31*XLEN/8, x5)

inst_62:
// rs2_w1_val == 1431655765, rs2_w0_val == -33, rs1_w0_val == -4194305, rs1_w1_val == -17
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffffefffbfffff;  op2val:0x55555555ffffffdf
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffffefffbfffff, 0x55555555ffffffdf, x1, 32*XLEN/8, x5)

inst_63:
// rs1_w1_val == rs2_w1_val, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffff8fffffeff;  op2val:0xfffffff8ffffffef
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffff8fffffeff, 0xfffffff8ffffffef, x1, 33*XLEN/8, x5)

inst_64:
// rs1_w0_val == -1048577, rs1_w1_val == 4, rs2_w1_val == 8
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000004ffefffff;  op2val:0x00000804000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000004ffefffff, 0x00000804000000, x1, 34*XLEN/8, x5)

inst_65:
// rs1_w0_val == -2097153, rs2_w0_val == 4096, rs1_w1_val == 2
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000002ffdfffff;  op2val:0xfffffff800001000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000002ffdfffff, 0xfffffff800001000, x1, 35*XLEN/8, x5)

inst_66:
// rs1_w0_val == -8388609, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffff8ff7fffff;  op2val:0xefffffff00008000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffff8ff7fffff, 0xefffffff00008000, x1, 36*XLEN/8, x5)

inst_67:
// rs1_w0_val == -16777217, rs2_w0_val == 16384, rs2_w1_val == 16
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000007feffffff;  op2val:0x00001000004000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000007feffffff, 0x00001000004000, x1, 37*XLEN/8, x5)

inst_68:
// rs1_w0_val == -33554433, rs1_w1_val == -268435457, rs2_w0_val == -1431655766
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xeffffffffdffffff;  op2val:0xfffffffaaaaaaaaa
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xeffffffffdffffff, 0xfffffffaaaaaaaaa, x1, 38*XLEN/8, x5)

inst_69:
// rs1_w0_val == -67108865, rs2_w1_val == -17, rs2_w0_val == -268435457
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000200fbffffff;  op2val:0xffffffefefffffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000200fbffffff, 0xffffffefefffffff, x1, 39*XLEN/8, x5)

inst_70:
// rs1_w0_val == -134217729, rs2_w0_val == -32769
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfefffffff7ffffff;  op2val:0xfffffffcffff7fff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfefffffff7ffffff, 0xfffffffcffff7fff, x1, 40*XLEN/8, x5)

inst_71:
// rs1_w0_val == -268435457, rs1_w1_val == -262145, rs2_w1_val == 1048576
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffbffffefffffff;  op2val:0x10000000000007
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffbffffefffffff, 0x10000000000007, x1, 41*XLEN/8, x5)

inst_72:
// rs1_w0_val == -536870913, rs1_w1_val == -1048577
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffefffffdfffffff;  op2val:0x000000c0000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffefffffdfffffff, 0x000000c0000000, x1, 42*XLEN/8, x5)

inst_73:
// rs1_w0_val == -1431655766, rs2_w1_val == -1
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffff7fffaaaaaaaa;  op2val:0xffffffff00000002
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffff7fffaaaaaaaa, 0xffffffff00000002, x1, 43*XLEN/8, x5)

inst_74:
// rs1_w1_val == -1, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffffffffffefff;  op2val:0x008000fffeffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffffffffffefff, 0x008000fffeffff, x1, 44*XLEN/8, x5)

inst_75:
// rs1_w1_val == 0, rs2_w0_val == -4097
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000000ffffffdf;  op2val:0xfeffffffffffefff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000000ffffffdf, 0xfeffffffffffefff, x1, 45*XLEN/8, x5)

inst_76:
// rs1_w1_val == 8, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000008ffefffff;  op2val:0xffffefff00080000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000008ffefffff, 0xffffefff00080000, x1, 46*XLEN/8, x5)

inst_77:
// rs1_w1_val == 32, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x00002004000000;  op2val:0x4000000fff7ffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x00002004000000, 0x4000000fff7ffff, x1, 47*XLEN/8, x5)

inst_78:
// rs1_w1_val == 64, rs2_w0_val == 0
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000040fffffffb;  op2val:0x00001000000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000040fffffffb, 0x00001000000000, x1, 48*XLEN/8, x5)

inst_79:
// rs1_w1_val == 128, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000080fffffdff;  op2val:0xaaaaaaaa02000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000080fffffdff, 0xaaaaaaaa02000000, x1, 49*XLEN/8, x5)

inst_80:
// rs1_w1_val == 256, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x00010000000000;  op2val:0xffffffbf02000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x00010000000000, 0xffffffbf02000000, x1, 50*XLEN/8, x5)

inst_81:
// rs1_w1_val == 4096, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x001000ffffff7f;  op2val:0xffffefff00000002
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x001000ffffff7f, 0xffffefff00000002, x1, 51*XLEN/8, x5)

inst_82:
// rs1_w1_val == 8192, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x002000ffffffef;  op2val:0xffefffff04000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x002000ffffffef, 0xffefffff04000000, x1, 52*XLEN/8, x5)

inst_83:
// rs1_w1_val == 32768, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x00800000000100;  op2val:0x7fffffff08000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x00800000000100, 0x7fffffff08000000, x1, 53*XLEN/8, x5)

inst_84:
// rs1_w1_val == 131072, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x020000dfffffff;  op2val:0xffbfffff00010000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x020000dfffffff, 0xffbfffff00010000, x1, 54*XLEN/8, x5)

inst_85:
// rs1_w1_val == 262144, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x040000fffffff9;  op2val:0x4000000fffeffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x040000fffffff9, 0x4000000fffeffff, x1, 55*XLEN/8, x5)

inst_86:
// rs1_w1_val == 8388608, rs2_w0_val == 256
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x80000000000002;  op2val:0x00000700000100
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x80000000000002, 0x00000700000100, x1, 56*XLEN/8, x5)

inst_87:
// rs1_w1_val == 33554432, rs2_w0_val == -16777217
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x200000020000000;  op2val:0xfffffff8feffffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x200000020000000, 0xfffffff8feffffff, x1, 57*XLEN/8, x5)

inst_88:
// rs1_w1_val == -134217729, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xf7ffffff00000008;  op2val:0xffffefff02000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xf7ffffff00000008, 0xffffefff02000000, x1, 58*XLEN/8, x5)

inst_89:
// rs1_w1_val == -536870913, rs2_w1_val == -1025, rs2_w0_val == -129
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xdfffffff20000000;  op2val:0xfffffbffffffff7f
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xdfffffff20000000, 0xfffffbffffffff7f, x1, 59*XLEN/8, x5)

inst_90:
// rs1_w1_val == -1073741825, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xbfffffffffdfffff;  op2val:0xffbfffff00004000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xbfffffffffdfffff, 0xffbfffff00004000, x1, 60*XLEN/8, x5)

inst_91:
// rs1_w1_val == -1431655766, rs2_w0_val == 1431655765
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xaaaaaaaafffffdff;  op2val:0xfffffff955555555
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xaaaaaaaafffffdff, 0xfffffff955555555, x1, 61*XLEN/8, x5)

inst_92:
// rs2_w0_val == -2147483648, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000400fffffdff;  op2val:0xfffeffff80000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000400fffffdff, 0xfffeffff80000000, x1, 62*XLEN/8, x5)

inst_93:
// rs2_w0_val == 1, rs2_w1_val == 256, rs1_w1_val == -65
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffffbf00000001;  op2val:0x00010000000001
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffffbf00000001, 0x00010000000001, x1, 63*XLEN/8, x5)

inst_94:
// rs2_w0_val == 16, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000006ffffdfff;  op2val:0xfbffffff00000010
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000006ffffdfff, 0xfbffffff00000010, x1, 64*XLEN/8, x5)

inst_95:
// rs2_w0_val == 32, rs1_w1_val == -129
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffff7ffffffeff;  op2val:0x00000800000020
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffff7ffffffeff, 0x00000800000020, x1, 65*XLEN/8, x5)

inst_96:
// rs2_w0_val == 64, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000400ffdfffff;  op2val:0x00000500000040
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000400ffdfffff, 0x00000500000040, x1, 66*XLEN/8, x5)

inst_97:
// rs2_w0_val == 1024, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000003fffffffc;  op2val:0xdfffffff00000400
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000003fffffffc, 0xdfffffff00000400, x1, 67*XLEN/8, x5)

inst_98:
// rs2_w0_val == 2048, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffefffffffbfffff;  op2val:0x00200000000800
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffefffffffbfffff, 0x00200000000800, x1, 68*XLEN/8, x5)

inst_99:
// rs2_w0_val == 131072, rs2_w1_val == 1
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x100000000000010;  op2val:0x00000100020000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x100000000000010, 0x00000100020000, x1, 69*XLEN/8, x5)

inst_100:
// rs2_w0_val == 262144, rs2_w1_val == -5
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xbfffffff80000000;  op2val:0xfffffffb00040000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xbfffffff80000000, 0xfffffffb00040000, x1, 70*XLEN/8, x5)

inst_101:
// rs2_w0_val == 268435456, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000006ffffefff;  op2val:0x00000710000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000006ffffefff, 0x00000710000000, x1, 71*XLEN/8, x5)

inst_102:
// rs2_w0_val == 536870912, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x2000000000000007;  op2val:0xfeffffff20000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x2000000000000007, 0xfeffffff20000000, x1, 72*XLEN/8, x5)

inst_103:
// rs2_w0_val == -2, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x4000000ffffdfff;  op2val:0xffbffffffffffffe
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x4000000ffffdfff, 0xffbffffffffffffe, x1, 73*XLEN/8, x5)

inst_104:
// rs2_w0_val == -3, rs2_w1_val == 33554432
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x00000200004000;  op2val:0x2000000fffffffd
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x00000200004000, 0x2000000fffffffd, x1, 74*XLEN/8, x5)

inst_105:
// rs2_w0_val == -9, rs2_w1_val == 64
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffff8ffbfffff;  op2val:0x000040fffffff7
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffff8ffbfffff, 0x000040fffffff7, x1, 75*XLEN/8, x5)

inst_106:
// rs2_w0_val == -65, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x00100000000005;  op2val:0xf7ffffffffffffbf
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x00100000000005, 0xf7ffffffffffffbf, x1, 76*XLEN/8, x5)

inst_107:
// rs2_w0_val == -257, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xf7ffffffbfffffff;  op2val:0xfffffffcfffffeff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xf7ffffffbfffffff, 0xfffffffcfffffeff, x1, 77*XLEN/8, x5)

inst_108:
// rs2_w0_val == -1025, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x080000f7ffffff;  op2val:0xfff7fffffffffbff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x080000f7ffffff, 0xfff7fffffffffbff, x1, 78*XLEN/8, x5)

inst_109:
// rs2_w0_val == -2097153, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x4000000fffffffc;  op2val:0xffffffffffdfffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x4000000fffffffc, 0xffffffffffdfffff, x1, 79*XLEN/8, x5)

inst_110:
// rs2_w0_val == -8388609, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x40000000000005;  op2val:0xbfffffffff7fffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x40000000000005, 0xbfffffffff7fffff, x1, 80*XLEN/8, x5)

inst_111:
// rs2_w0_val == -536870913, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000008fffffeff;  op2val:0xfffeffffdfffffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000008fffffeff, 0xfffeffffdfffffff, x1, 81*XLEN/8, x5)

inst_112:
// rs2_w1_val == 4, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffff7f00000005;  op2val:0x00000400000100
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffff7f00000005, 0x00000400000100, x1, 82*XLEN/8, x5)

inst_113:
// rs2_w1_val == 32, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x080000fffeffff;  op2val:0x00002040000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x080000fffeffff, 0x00002040000000, x1, 83*XLEN/8, x5)

inst_114:
// rs2_w1_val == 128, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xbfffffff00100000;  op2val:0x00008000400000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xbfffffff00100000, 0x00008000400000, x1, 84*XLEN/8, x5)

inst_115:
// rs2_w1_val == 512, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x00800000000200;  op2val:0x000200bfffffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x00800000000200, 0x000200bfffffff, x1, 85*XLEN/8, x5)

inst_116:
// rs2_w1_val == 1024, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffffdf7fffffff;  op2val:0x00040000040000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffffdf7fffffff, 0x00040000040000, x1, 86*XLEN/8, x5)

inst_117:
// rs2_w1_val == 4096, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x00000200000002;  op2val:0x00100000000004
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x00000200000002, 0x00100000000004, x1, 87*XLEN/8, x5)

inst_118:
// rs2_w1_val == 131072, rs1_w1_val == -2097153
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffdfffffffbfffff;  op2val:0x02000000000200
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffdfffffffbfffff, 0x02000000000200, x1, 88*XLEN/8, x5)

inst_119:
// rs2_w1_val == 524288, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x400000000000001;  op2val:0x08000000002000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x400000000000001, 0x08000000002000, x1, 89*XLEN/8, x5)

inst_120:
// rs1_w1_val == 268435456, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x1000000000000020;  op2val:0x000004fbffffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x1000000000000020, 0x000004fbffffff, x1, 90*XLEN/8, x5)

inst_121:
// rs2_w1_val == 2097152, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x02000000000008;  op2val:0x20000000000080
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x02000000000008, 0x20000000000080, x1, 91*XLEN/8, x5)

inst_122:
// rs2_w1_val == 4194304, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000100fffffffc;  op2val:0x40000000000003
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000100fffffffc, 0x40000000000003, x1, 92*XLEN/8, x5)

inst_123:
// rs1_w1_val == -2, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffffec0000000;  op2val:0xfffffff7ffbfffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffffec0000000, 0xfffffff7ffbfffff, x1, 93*XLEN/8, x5)

inst_124:
// rs1_w1_val == -9, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffff77fffffff;  op2val:0x00000000000001
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffff77fffffff, 0x00000000000001, x1, 94*XLEN/8, x5)

inst_125:
// rs2_w1_val == 268435456, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffdfffff20000000;  op2val:0x10000000fffeffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffdfffff20000000, 0x10000000fffeffff, x1, 95*XLEN/8, x5)

inst_126:
// rs1_w1_val == -257, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffefffffffffb;  op2val:0x100000fff7ffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffefffffffffb, 0x100000fff7ffff, x1, 96*XLEN/8, x5)

inst_127:
// rs2_w1_val == -2, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffffff00100000;  op2val:0xfffffffe00000005
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffffff00100000, 0xfffffffe00000005, x1, 97*XLEN/8, x5)

inst_128:
// rs2_w1_val == -3, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x01000001000000;  op2val:0xfffffffd00000001
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x01000001000000, 0xfffffffd00000001, x1, 98*XLEN/8, x5)

inst_129:
// rs1_w1_val == -2049, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffff7ff00000001;  op2val:0xdfffffff08000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffff7ff00000001, 0xdfffffff08000000, x1, 99*XLEN/8, x5)

inst_130:
// rs1_w1_val == -8193, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffdfffffffefff;  op2val:0xfff7ffff00100000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffdfffffffefff, 0xfff7ffff00100000, x1, 100*XLEN/8, x5)

inst_131:
// rs1_w1_val == -16385, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffbfff00000004;  op2val:0xfffffffeffffffdf
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffbfff00000004, 0xfffffffeffffffdf, x1, 101*XLEN/8, x5)

inst_132:
// rs2_w1_val == -129, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffff7fff00200000;  op2val:0xffffff7fffffffdf
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffff7fff00200000, 0xffffff7fffffffdf, x1, 102*XLEN/8, x5)

inst_133:
// rs1_w1_val == -4194305, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffbfffff7fffffff;  op2val:0xfff7ffff04000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffbfffff7fffffff, 0xfff7ffff04000000, x1, 103*XLEN/8, x5)

inst_134:
// rs2_w1_val == -513, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x00000720000000;  op2val:0xfffffdffffffefff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x00000720000000, 0xfffffdffffffefff, x1, 104*XLEN/8, x5)

inst_135:
// rs2_w0_val == -16385, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x000000c0000000;  op2val:0xff7fffffffffbfff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x000000c0000000, 0xff7fffffffffbfff, x1, 105*XLEN/8, x5)

inst_136:
// rs2_w1_val == -2049, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xffffffef00020000;  op2val:0xfffff7ff00000008
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xffffffef00020000, 0xfffff7ff00000008, x1, 106*XLEN/8, x5)

inst_137:
// rs2_w0_val == -262145, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x800000000000006;  op2val:0xfffff7fffffbffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x800000000000006, 0xfffff7fffffbffff, x1, 107*XLEN/8, x5)

inst_138:
// rs1_w1_val == -8388609, 
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xff7fffffffffefff;  op2val:0xffffff7fffffefff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xff7fffffffffefff, 0xffffff7fffffefff, x1, 108*XLEN/8, x5)

inst_139:
// rs1_w0_val == 1, rs1_w0_val > 0 and rs2_w0_val > 0, rs2_w0_val == 16777216
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x40000000000001;  op2val:0x00000501000000
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x40000000000001, 0x00000501000000, x1, 109*XLEN/8, x5)

inst_140:
// rs1_w0_val == 2097152, rs2_w1_val == 134217728, rs1_w1_val == 2097152
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0x20000000200000;  op2val:0x8000000fffdffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0x20000000200000, 0x8000000fffdffff, x1, 110*XLEN/8, x5)

inst_141:
// rs1_w0_val == 16777216, rs1_w1_val == -1025, rs2_w1_val == -134217729, rs2_w0_val == -65537
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffbff01000000;  op2val:0xf7fffffffffeffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffbff01000000, 0xf7fffffffffeffff, x1, 111*XLEN/8, x5)

inst_142:
// rs1_w0_val == 134217728, rs2_w1_val == -1431655766
// opcode: paas.wx ; op1:x30; op2:x29; dest:x31; op1val:0xfffffdff08000000;  op2val:0xaaaaaaaabfffffff
TEST_RR_OP(paas.wx, x31, x30, x29, 0x0000000000000000, 0xfffffdff08000000, 0xaaaaaaaabfffffff, x1, 112*XLEN/8, x5)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x8_0:
    .fill 0*((XLEN/8)/4),4,0xdeadbeef


signature_x8_1:
    .fill 13*((XLEN/8)/4),4,0xdeadbeef


signature_x4_0:
    .fill 17*((XLEN/8)/4),4,0xdeadbeef


signature_x1_0:
    .fill 113*((XLEN/8)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
